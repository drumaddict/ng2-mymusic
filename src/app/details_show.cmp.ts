import {View, Component, OnInit } from 'angular2/core';import {MATERIAL_DIRECTIVES, MATERIAL_PROVIDERS} from "ng2-material/all";import {Observable}     from 'rxjs/Observable';import {ApiService}       from './services/api.service';import {CrudService}   from './services/crud.service';import {KeysValuesPipe}   from './utils/keys_values.pipe';import * as pluralize from 'pluralize'import * as _ from 'lodash';@Component({  selector: 'details-show',  template: require('!jade!./details_show.jade')(),  styles: [require('./details.scss')],  directives: [MATERIAL_DIRECTIVES],  providers: [ApiService, MATERIAL_PROVIDERS],  pipes: [KeysValuesPipe] })export class DetailsShow implements OnInit {  constructor(    private _apiService: ApiService,    private _crudService: CrudService    ) {}  errorMessage: string;  artists: any;  public selected_object: any;  public selected_object_class = '';  public related_classes = [];  private _selected_object_relations = {} as any;  ngOnInit() {    this._crudService.show_details$.subscribe(object => this.onObjectShow(object));    this._crudService.update$.subscribe(object => this.onObjectShow(object));    this.selected_object = {      class: ['artist'],      properties: {        title: ''      }    };    this.selected_object_class = this.selected_object.class[0];    }  onObjectShow(object: any) {    this.selected_object = object    this.selected_object_class = this.selected_object.class[0]    this.selected_object_relations = object;  }  set selected_object_relations(object: any) {    this.related_classes = _.uniq(_.map(this.selected_object.entities, function(e: any) { return e.class[0] }));    let class_to_related = {} as any;    _(this.related_classes).forEach(function(cl) {      class_to_related[cl] = _.filter(object.entities, function(e: any) { return e.class[0] == cl });    });    this._selected_object_relations = class_to_related;  }  raiseDelete(object: any) {    this._crudService.delete(object);  }  raiseList(object: any) {    this._crudService.list(object);  }  raiseEdit(object: any) {    console.log('raise Edit',object)    this._crudService.edit(object);  }}