button.md-raised.md-primary((click)="getList('artists')") Artists
button.md-raised.md-primary( (click)="getList('genres')") Genres
button.md-raised.md-primary( (click)="getList('users')") Users
button.md-raised.md-primary( (click)="getList('playlists')") Playlists
h6 Welcome {{user_email}}
div.spinner-wrapper
  my-spinner.mm-spinner([isRunning]="spinner_active")
md-content(*ngIf="initialized")
  h3(*ngIf="current_artist && list_type!='artist' && list_type!='genre'") {{current_artist?.properties.title}}
  div([ngSwitch]= "list_type" )
    template([ngSwitchWhen]="'artist'")
      h3 {{list_type}}s
      a( (click)="raiseCreate({list_type: list_type})")
        button Create Artist
    template([ngSwitchWhen]="'album'")
      h3 {{list_type}}s
      a( (click)="raiseCreate({list_type: list_type,artist: list_items_owner})")
        button.md-raised.md-primary(md-raised-button='') Create Album for {{ list_items_owner.properties.title }}
      button.md-raised.md-primary(md-raised-button, (click)="getList('artists',1)") Back to Artists
    template([ngSwitchWhen]="'track'")
      h4  {{ list_items_owner.properties.title }}
      h3 {{list_type}}s
      button.md-raised.md-primary(md-raised-button, (click)="getList('albums',1,12,{artist: current_artist.properties.title })") Back to Albums
      a( (click)="raiseCreate({list_type: list_type,album: list_items_owner})")
        button.md-raised.md-primary(md-raised-button='') Create Track for {{ list_items_owner.properties.title }}
    template([ngSwitchWhen]="'playlist'")
      h3 {{list_type}}s
    template([ngSwitchWhen]="'genre'")
      h3 {{list_type}}s
      a( (click)="raiseCreate({list_type: list_type})")
        button.md-raised.md-primary(md-raised-button='') Create Genre
    template([ngSwitchWhen]="'user'")
      h3 {{list_type}}s
      a( (click)="raiseCreate({list_type: list_type})")
        button.md-raised.md-primary(md-raised-button='') Create User
    template(ngSwitchDefault)
      //h2 {{list_type}}

div.wf-container(*ngIf="initialized")
  div(layout='row', layout-padding='', layout-wrap='', layout-fill='', style='padding-bottom: 32px;', ng-cloak='')
    md-whiteframe.md-whiteframe-1dp(*ngFor="#item of list | paginate: { id: 'paging', itemsPerPage: page_size, currentPage: page, totalItems: total_count }" flex-sm='45', flex-gt-sm='35', flex-gt-md='25', layout='', layout-align='center center', style="cursor:pointer;" , (click)='show_details(item)', [class.selected-item]="selected_item && (selected_item.properties.id == item.properties.id)" )
      strong {{ item.properties.title }}
      strong {{ item.properties?.name }}


pagination-controls(#p, id='paging', (pageChange)='page = $event;getList(list_uri,$event)' style='cursor: pointer!important;',*ngIf="initialized")
  .custom-pagination
    .pagination-previous([class.disabled]='p.isFirstPage()', *ngIf='p.directionLinks')
      a( *ngIf='!p.isFirstPage()', (click)='p.previous()' )
    div(*ngFor='#page of p.pages', [class.current]='p.getCurrent() === page.value')
      a(  (click)='p.setCurrent(page.value)', *ngIf='p.getCurrent() !== page.value')
        span {{ page.label }}
      div(*ngIf='p.getCurrent() === page.value')
        span {{ page.label }}
    .pagination-next([class.disabled]='p.isLastPage()', *ngIf='p.directionLinks')
      a(*ngIf='!p.isLastPage()', (click)='p.next()' )


